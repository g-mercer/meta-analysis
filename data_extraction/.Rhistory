extr_data_filt_ai_form <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == extr_data_filt_ai_form$FORM_ERROR_TYPE, ]
# keep just the CI_95 rows
ci_95_rows <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == "CI_95", ]
# SE values
SE_rows <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == "SE", ]
# for some CIs there were data inputting errors resulting in negative values for the arms.
# if either of the arms are greater than 0, retain
# row removed. This will be excluded from the analysis
ci_95_rows [(ci_95_rows$FORM_ERROR_LOWER <= 0) & (ci_95_rows$FORM_ERROR_HIGHER <= 0), ]
ci_95_rows <- ci_95_rows [(ci_95_rows$AI_ERROR_LOWER > 0) | (ci_95_rows$AI_ERROR_HIGHER > 0), ]
ci_95_rows <- ci_95_rows [(ci_95_rows$FORM_ERROR_LOWER > 0) | (ci_95_rows$FORM_ERROR_HIGHER > 0), ]
# missing variance df
missing_se <- extr_data [(extr_data$AI_ERROR_TYPE == "n/a") | (extr_data$FORM_ERROR_TYPE == "n/a"), ]
# remove the > signs
missing_se$AI_50 <- gsub(">", "", missing_se$AI_50)
missing_se$FORM_50 <- gsub(">", "", missing_se$FORM_50)
# make numeric
missing_se$AI_50 <- as.numeric(missing_se$AI_50)
missing_se$FORM_50 <- as.numeric(missing_se$FORM_50)
nrow(missing_se [missing_se$AI_50 > missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 < missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 == missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 > missing_se$FORM_50, ]) / nrow(missing_se)
with_variance <- extr_data [(extr_data$AI_ERROR_TYPE != "n/a") & (extr_data$FORM_ERROR_TYPE != "n/a"), ]
# remove the row where both CI arms were 0
with_variance <- with_variance [!((with_variance$FORM_ERROR_LOWER <= 0) & (with_variance$FORM_ERROR_HIGHER <= 0)), ]
with_variance$AI_50 <- as.numeric(with_variance$AI_50)
with_variance$FORM_50 <- as.numeric(with_variance$FORM_50)
nrow(with_variance [with_variance$AI_50 > with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 < with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 == with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 > with_variance$FORM_50, ]) / nrow(with_variance)
# for the AI
AI_biggest_CI_arm <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
if(ci_95_rows$AI_ERROR_LOWER [i] > ci_95_rows$AI_ERROR_HIGHER [i]) {
AI_biggest_CI_arm [i] <- ci_95_rows$AI_ERROR_LOWER [i]
}
else {
AI_biggest_CI_arm [i] <- ci_95_rows$AI_ERROR_HIGHER [i]
}
}
ci_95_rows$AI_BIGGEST_CI_ARM <- AI_biggest_CI_arm [, 1]
# add a row for AI_N_INDIVIDUAL
ci_95_rows$AI_N_INDIVIDUAL <- ci_95_rows$AI_N_CONTAINER * ci_95_rows$AI_N_INDIVIDUALS_PER_CONTAINER
# SE calculated using sample size at the individual level.
AI_SE_individual <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_individual [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_N_INDIVIDUAL [i] -1)
}
ci_95_rows$AI_SE_INDIVIDUAL <- AI_SE_individual [, 1]
# SE calculated using sample size at the container level.
AI_SE_container <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_container [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_N_CONTAINER [i] -1)
}
ci_95_rows$AI_SE_CONTAINER <- AI_SE_container [, 1]
# for the formulation
FORM_biggest_CI_arm <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
if(ci_95_rows$FORM_ERROR_LOWER [i] > ci_95_rows$FORM_ERROR_HIGHER [i]) {
FORM_biggest_CI_arm [i] <- ci_95_rows$FORM_ERROR_LOWER [i]
}
else {
FORM_biggest_CI_arm [i] <- ci_95_rows$FORM_ERROR_HIGHER [i]
}
}
ci_95_rows$FORM_BIGGEST_CI_ARM <- FORM_biggest_CI_arm [, 1]
# add a row for FORM_N_INDIVIDUAL
ci_95_rows$FORM_N_INDIVIDUAL <- ci_95_rows$FORM_N_CONTAINER * ci_95_rows$FORM_N_INDIVIDUALS_PER_CONTAINER
# SE calculated using sample size at the individual level.
FORM_SE_individual <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_individual [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_N_INDIVIDUAL [i] -1)
}
ci_95_rows$FORM_SE_INDIVIDUAL <- FORM_SE_individual [, 1]
# SE calculated using sample size at the container level.
FORM_SE_container <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_container [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_N_CONTAINER [i] -1)
}
ci_95_rows$FORM_SE_CONTAINER <- FORM_SE_container [, 1]
# average cluster size
ci_95_rows$AVERAGE_CLUSTER_SIZE <- ((ci_95_rows$AI_N_CONTAINER * ci_95_rows$AI_N_INDIVIDUALS_PER_CONTAINER) + (ci_95_rows$FORM_N_CONTAINER * ci_95_rows$FORM_N_INDIVIDUALS_PER_CONTAINER)) / (ci_95_rows$AI_N_CONTAINER + ci_95_rows$FORM_N_CONTAINER)
# design effect for 0.442 ICC
ci_95_rows$DESIGN_EFFECT_0.442_ICC <- 1 + (ci_95_rows$AVERAGE_CLUSTER_SIZE - 1) * 0.442
# ESS for ai based on 0.442 ICC
ci_95_rows$AI_ESS_0.442_ICC <- ci_95_rows$AI_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.442_ICC
# ESS for form based on 0.442 ICC
ci_95_rows$FORM_ESS_0.442_ICC <- ci_95_rows$FORM_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.442_ICC
# design effect for 0.046 ICC
ci_95_rows$DESIGN_EFFECT_0.046_ICC <- 1 + (ci_95_rows$AVERAGE_CLUSTER_SIZE - 1) * 0.046
# ESS for ai based on 0.046 ICC
ci_95_rows$AI_ESS_0.046_ICC <- ci_95_rows$AI_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.046_ICC
# ESS for FORM based on 0.046 ICC
ci_95_rows$FORM_ESS_0.046_ICC <- ci_95_rows$FORM_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.046_ICC
# FORM SE calculation using ESS (ICC = 0.442)
FORM_SE_ESS_0.442 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_ESS_0.442 [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_ESS_0.442_ICC [i] -1)
}
ci_95_rows$FORM_SE_ESS_0.442 <- FORM_SE_ESS_0.442 [, 1]
# FORM SE calculation using ESS (ICC = 0.046)
FORM_SE_ESS_0.046 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_ESS_0.046 [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_ESS_0.046_ICC [i] -1)
}
ci_95_rows$FORM_SE_ESS_0.046 <- FORM_SE_ESS_0.046 [, 1]
# AI SE calculation using ESS (ICC = 0.442)
AI_SE_ESS_0.442 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_ESS_0.442 [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_ESS_0.442_ICC [i] -1)
}
ci_95_rows$AI_SE_ESS_0.442 <- AI_SE_ESS_0.442 [, 1]
# AI SE calculation using ESS (ICC = 0.046)
AI_SE_ESS_0.046 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_ESS_0.046 [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_ESS_0.046_ICC [i] -1)
}
ci_95_rows$AI_SE_ESS_0.046 <- AI_SE_ESS_0.046 [, 1]
SE_rows$AI_BIGGEST_CI_ARM <- NA
SE_rows$AI_N_INDIVIDUAL <- SE_rows$AI_N_CONTAINER * SE_rows$AI_N_INDIVIDUALS_PER_CONTAINER
SE_rows$AI_SE_INDIVIDUAL <- SE_rows$AI_ERROR_LOWER
SE_rows$AI_SE_CONTAINER <- SE_rows$AI_ERROR_LOWER
SE_rows$AVERAGE_CLUSTER_SIZE <- NA
SE_rows$FORM_BIGGEST_CI_ARM <- NA
SE_rows$FORM_N_INDIVIDUAL <- SE_rows$FORM_N_CONTAINER * SE_rows$FORM_N_INDIVIDUALS_PER_CONTAINER
SE_rows$FORM_SE_INDIVIDUAL <- SE_rows$FORM_ERROR_LOWER
SE_rows$FORM_SE_CONTAINER <- SE_rows$FORM_ERROR_LOWER
SE_rows$DESIGN_EFFECT_0.442_ICC <- NA
SE_rows$AI_ESS_0.442_ICC <- NA
SE_rows$FORM_ESS_0.442_ICC <- NA
SE_rows$DESIGN_EFFECT_0.046_ICC <- NA
SE_rows$AI_ESS_0.046_ICC <- NA
SE_rows$FORM_ESS_0.046_ICC <- NA
SE_rows$FORM_SE_ESS_0.442 <- SE_rows$FORM_ERROR_LOWER
SE_rows$FORM_SE_ESS_0.046 <- SE_rows$FORM_ERROR_LOWER
SE_rows$AI_SE_ESS_0.442 <- SE_rows$AI_ERROR_LOWER
SE_rows$AI_SE_ESS_0.046 <- SE_rows$AI_ERROR_LOWER
# combine
CI_SE_combined <- rbind(ci_95_rows, SE_rows)
mixed_error_row <- different_error_type [1, ]
# AI expressed as SE
mixed_error_row$AI_BIGGEST_CI_ARM <- NA
mixed_error_row$AI_N_INDIVIDUAL <- mixed_error_row$AI_N_CONTAINER * mixed_error_row$AI_N_INDIVIDUALS_PER_CONTAINER
mixed_error_row$AI_SE_INDIVIDUAL <- mixed_error_row$AI_ERROR_LOWER
mixed_error_row$AI_SE_CONTAINER <- mixed_error_row$AI_ERROR_LOWER
# FORM expressed as CI. Lower error larger of the two so just manually insert.
mixed_error_row$FORM_BIGGEST_CI_ARM <- NA
mixed_error_row$FORM_N_INDIVIDUAL <- mixed_error_row$FORM_N_CONTAINER * mixed_error_row$FORM_N_INDIVIDUALS_PER_CONTAINER
mixed_error_row$FORM_SE_INDIVIDUAL <- mixed_error_row$FORM_ERROR_LOWER / -qt(.025, df = mixed_error_row$FORM_N_INDIVIDUAL -1)
mixed_error_row$FORM_SE_CONTAINER <- mixed_error_row$FORM_ERROR_LOWER / -qt(.025, df = mixed_error_row$FORM_N_CONTAINER -1)
# average cluster size
mixed_error_row$AVERAGE_CLUSTER_SIZE <- (mixed_error_row$FORM_N_CONTAINER * mixed_error_row$FORM_N_INDIVIDUALS_PER_CONTAINER) / (mixed_error_row$FORM_N_CONTAINER)
# design effect for 0.442 ICC
mixed_error_row$DESIGN_EFFECT_0.442_ICC <- 1 + (mixed_error_row$AVERAGE_CLUSTER_SIZE - 1) * 0.442
# ESS for ai based on 0.442 ICC
mixed_error_row$AI_ESS_0.442_ICC <- NA
# ESS for form based on 0.442 ICC
mixed_error_row$FORM_ESS_0.442_ICC <- mixed_error_row$FORM_N_INDIVIDUAL / mixed_error_row$DESIGN_EFFECT_0.442_ICC
# design effect for 0.046 ICC
mixed_error_row$DESIGN_EFFECT_0.046_ICC <- 1 + (mixed_error_row$AVERAGE_CLUSTER_SIZE - 1) * 0.046
# ESS for ai based on 0.046 ICC
mixed_error_row$AI_ESS_0.046_ICC <- NA
# ESS for FORM based on 0.046 ICC
mixed_error_row$FORM_ESS_0.046_ICC <- mixed_error_row$FORM_N_INDIVIDUAL / mixed_error_row$DESIGN_EFFECT_0.046_ICC
# FORM SE calculation using ESS (ICC = 0.442)
FORM_SE_ESS_0.442 <- matrix(0, nrow = nrow(mixed_error_row), ncol = 1)
for (i in 1:nrow(mixed_error_row)) {
FORM_SE_ESS_0.442 [i] <- mixed_error_row$FORM_ERROR_LOWER [i] / -qt(.025, df = mixed_error_row$FORM_ESS_0.442_ICC [i] -1)
}
mixed_error_row$FORM_SE_ESS_0.442 <- FORM_SE_ESS_0.442 [, 1]
# FORM SE calculation using ESS (ICC = 0.046)
FORM_SE_ESS_0.046 <- matrix(0, nrow = nrow(mixed_error_row), ncol = 1)
for (i in 1:nrow(mixed_error_row)) {
FORM_SE_ESS_0.046 [i] <- mixed_error_row$FORM_ERROR_LOWER [i] / -qt(.025, df = mixed_error_row$FORM_ESS_0.046_ICC [i] -1)
}
mixed_error_row$FORM_SE_ESS_0.046 <- FORM_SE_ESS_0.046 [, 1]
# AI SE calculation using ESS (ICC = 0.442)
mixed_error_row$AI_SE_ESS_0.442 <- mixed_error_row$AI_ERROR_LOWER
# AI SE calculation using ESS (ICC = 0.046)
mixed_error_row$AI_SE_ESS_0.046 <- mixed_error_row$AI_ERROR_LOWER
# combine
CI_SE_combined <- rbind(CI_SE_combined, mixed_error_row)
# cbind(CI_SE_combined$AI_SE_CONTAINER, CI_SE_combined$AI_SE_ESS_0.442, CI_SE_combined$AI_SE_ESS_0.046, CI_SE_combined$AI_SE_INDIVIDUAL)
# above shows that as sample size gets bigger, the extracted SE gets bigger
# calculate LRR
CI_SE_combined$LRR <- log(CI_SE_combined$FORM_50/CI_SE_combined$AI_50)
# calculate LRR variance using var(lnRR) = SE_FORM^2/mean_FORM^2 + SE_AI^2/mean_AI^2
# individual SE variance
CI_SE_combined$LRR_VAR_INDIVIDUAL <- (CI_SE_combined$FORM_SE_INDIVIDUAL^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_INDIVIDUAL^2 / CI_SE_combined$AI_50^2)
# container SE variance
CI_SE_combined$LRR_VAR_CONTAINER <- (CI_SE_combined$FORM_SE_CONTAINER^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_CONTAINER^2 / CI_SE_combined$AI_50^2)
# ICC 0.442 SE variance
CI_SE_combined$LRR_VAR_CONTAINER_0.442 <- (CI_SE_combined$FORM_SE_ESS_0.442^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_ESS_0.442^2 / CI_SE_combined$AI_50^2)
# ICC 0.046 SE variance
CI_SE_combined$LRR_VAR_CONTAINER_0.046 <- (CI_SE_combined$FORM_SE_ESS_0.046^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_ESS_0.046^2 / CI_SE_combined$AI_50^2)
# variance from big to small
cbind(CI_SE_combined$LRR_VAR_INDIVIDUAL, CI_SE_combined$LRR_VAR_CONTAINER_0.046, CI_SE_combined$LRR_VAR_CONTAINER_0.442, CI_SE_combined$LRR_VAR_CONTAINER)
# this effect size has a very small variance because it has a sample size of 2. This made the t-dis value very large, making the SE small
# in turn making the variance small.
CI_SE_combined [87, ]
# here the quoted CI was massive, so the SE is as well.
CI_SE_combined [221, ]
# sample size was 2
CI_SE_combined [(CI_SE_combined$AI_N_INDIVIDUAL == 2) & (CI_SE_combined$FORM_N_INDIVIDUAL == 2), ]
CI_SE_combined_clean <- CI_SE_combined [ , c(1,2,3,5,8,12,14,17,22,23,24,26,27,28,29,30,31,32,33,35:45,48,49,4,51,52,68,67,53,13,55,56,66,65,57,69:73)]
CI_SE_combined_clean <- CI_SE_combined_clean [, c(1,2,10,18,9,3:8,11:17,19:46,49,48,47)]
View(CI_SE_combined_clean)
knitr::opts_chunk$set(echo = TRUE)
extr_data <- read.csv("data_extraction_2x5.csv")
# remove > values for AI and formulation from df
extr_data_filt_ai <- extr_data [-grep(">", extr_data$AI_50), ]
extr_data_filt_ai_form <- extr_data_filt_ai [-grep(">", extr_data_filt_ai$FORM_50), ]
# make AI_50 and FORM_50 numeric
extr_data_filt_ai_form$AI_50 <- as.numeric(extr_data_filt_ai_form$AI_50)
extr_data_filt_ai_form$FORM_50 <- as.numeric(extr_data_filt_ai_form$FORM_50)
# make AI_ERROR_LOWER, AI_ERROR_HIGHER, FORM_ERROR_LOWER and FORM_ERROR_HIGHER numeric
extr_data_filt_ai_form$AI_ERROR_LOWER <- as.numeric(extr_data_filt_ai_form$AI_ERROR_LOWER)
extr_data_filt_ai_form$AI_ERROR_HIGHER <- as.numeric(extr_data_filt_ai_form$AI_ERROR_HIGHER)
extr_data_filt_ai_form$FORM_ERROR_LOWER <- as.numeric(extr_data_filt_ai_form$FORM_ERROR_LOWER)
extr_data_filt_ai_form$FORM_ERROR_HIGHER <- as.numeric(extr_data_filt_ai_form$FORM_ERROR_HIGHER)
# make AI_N_CONTAINER and AI_N_INDIVIDUALS_PER_CONTAINER numeric
extr_data_filt_ai_form$AI_N_CONTAINER <- as.numeric(extr_data_filt_ai_form$AI_N_CONTAINER)
extr_data_filt_ai_form$AI_N_INDIVIDUALS_PER_CONTAINER <- as.numeric(extr_data_filt_ai_form$AI_N_INDIVIDUALS_PER_CONTAINER)
# make FORM_N_CONTAINER and FORM_N_INDIVIDUALS_PER_CONTAINER numeric
extr_data_filt_ai_form$FORM_N_CONTAINER <- as.numeric(extr_data_filt_ai_form$FORM_N_CONTAINER)
extr_data_filt_ai_form$FORM_N_INDIVIDUALS_PER_CONTAINER <- as.numeric(extr_data_filt_ai_form$FORM_N_INDIVIDUALS_PER_CONTAINER)
# do the ai and formulations always both have ci_95 or se?
different_error_type <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE != extr_data_filt_ai_form$FORM_ERROR_TYPE, ]
# remove these for now
extr_data_filt_ai_form <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == extr_data_filt_ai_form$FORM_ERROR_TYPE, ]
# keep just the CI_95 rows
ci_95_rows <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == "CI_95", ]
# SE values
SE_rows <- extr_data_filt_ai_form [extr_data_filt_ai_form$AI_ERROR_TYPE == "SE", ]
# for some CIs there were data inputting errors resulting in negative values for the arms.
# if either of the arms are greater than 0, retain
# row removed. This will be excluded from the analysis
ci_95_rows [(ci_95_rows$FORM_ERROR_LOWER <= 0) & (ci_95_rows$FORM_ERROR_HIGHER <= 0), ]
ci_95_rows <- ci_95_rows [(ci_95_rows$AI_ERROR_LOWER > 0) | (ci_95_rows$AI_ERROR_HIGHER > 0), ]
ci_95_rows <- ci_95_rows [(ci_95_rows$FORM_ERROR_LOWER > 0) | (ci_95_rows$FORM_ERROR_HIGHER > 0), ]
# missing variance df
missing_se <- extr_data [(extr_data$AI_ERROR_TYPE == "n/a") | (extr_data$FORM_ERROR_TYPE == "n/a"), ]
# remove the > signs
missing_se$AI_50 <- gsub(">", "", missing_se$AI_50)
missing_se$FORM_50 <- gsub(">", "", missing_se$FORM_50)
# make numeric
missing_se$AI_50 <- as.numeric(missing_se$AI_50)
missing_se$FORM_50 <- as.numeric(missing_se$FORM_50)
nrow(missing_se [missing_se$AI_50 > missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 < missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 == missing_se$FORM_50, ])
nrow(missing_se [missing_se$AI_50 > missing_se$FORM_50, ]) / nrow(missing_se)
with_variance <- extr_data [(extr_data$AI_ERROR_TYPE != "n/a") & (extr_data$FORM_ERROR_TYPE != "n/a"), ]
# remove the row where both CI arms were 0
with_variance <- with_variance [!((with_variance$FORM_ERROR_LOWER <= 0) & (with_variance$FORM_ERROR_HIGHER <= 0)), ]
with_variance$AI_50 <- as.numeric(with_variance$AI_50)
with_variance$FORM_50 <- as.numeric(with_variance$FORM_50)
nrow(with_variance [with_variance$AI_50 > with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 < with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 == with_variance$FORM_50, ])
nrow(with_variance [with_variance$AI_50 > with_variance$FORM_50, ]) / nrow(with_variance)
# for the AI
AI_biggest_CI_arm <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
if(ci_95_rows$AI_ERROR_LOWER [i] > ci_95_rows$AI_ERROR_HIGHER [i]) {
AI_biggest_CI_arm [i] <- ci_95_rows$AI_ERROR_LOWER [i]
}
else {
AI_biggest_CI_arm [i] <- ci_95_rows$AI_ERROR_HIGHER [i]
}
}
ci_95_rows$AI_BIGGEST_CI_ARM <- AI_biggest_CI_arm [, 1]
# add a row for AI_N_INDIVIDUAL
ci_95_rows$AI_N_INDIVIDUAL <- ci_95_rows$AI_N_CONTAINER * ci_95_rows$AI_N_INDIVIDUALS_PER_CONTAINER
# SE calculated using sample size at the individual level.
AI_SE_individual <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_individual [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_N_INDIVIDUAL [i] -1)
}
ci_95_rows$AI_SE_INDIVIDUAL <- AI_SE_individual [, 1]
# SE calculated using sample size at the container level.
AI_SE_container <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_container [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_N_CONTAINER [i] -1)
}
ci_95_rows$AI_SE_CONTAINER <- AI_SE_container [, 1]
# for the formulation
FORM_biggest_CI_arm <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
if(ci_95_rows$FORM_ERROR_LOWER [i] > ci_95_rows$FORM_ERROR_HIGHER [i]) {
FORM_biggest_CI_arm [i] <- ci_95_rows$FORM_ERROR_LOWER [i]
}
else {
FORM_biggest_CI_arm [i] <- ci_95_rows$FORM_ERROR_HIGHER [i]
}
}
ci_95_rows$FORM_BIGGEST_CI_ARM <- FORM_biggest_CI_arm [, 1]
# add a row for FORM_N_INDIVIDUAL
ci_95_rows$FORM_N_INDIVIDUAL <- ci_95_rows$FORM_N_CONTAINER * ci_95_rows$FORM_N_INDIVIDUALS_PER_CONTAINER
# SE calculated using sample size at the individual level.
FORM_SE_individual <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_individual [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_N_INDIVIDUAL [i] -1)
}
ci_95_rows$FORM_SE_INDIVIDUAL <- FORM_SE_individual [, 1]
# SE calculated using sample size at the container level.
FORM_SE_container <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_container [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_N_CONTAINER [i] -1)
}
ci_95_rows$FORM_SE_CONTAINER <- FORM_SE_container [, 1]
# average cluster size
ci_95_rows$AVERAGE_CLUSTER_SIZE <- ((ci_95_rows$AI_N_CONTAINER * ci_95_rows$AI_N_INDIVIDUALS_PER_CONTAINER) + (ci_95_rows$FORM_N_CONTAINER * ci_95_rows$FORM_N_INDIVIDUALS_PER_CONTAINER)) / (ci_95_rows$AI_N_CONTAINER + ci_95_rows$FORM_N_CONTAINER)
# design effect for 0.442 ICC
ci_95_rows$DESIGN_EFFECT_0.442_ICC <- 1 + (ci_95_rows$AVERAGE_CLUSTER_SIZE - 1) * 0.442
# ESS for ai based on 0.442 ICC
ci_95_rows$AI_ESS_0.442_ICC <- ci_95_rows$AI_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.442_ICC
# ESS for form based on 0.442 ICC
ci_95_rows$FORM_ESS_0.442_ICC <- ci_95_rows$FORM_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.442_ICC
# design effect for 0.046 ICC
ci_95_rows$DESIGN_EFFECT_0.046_ICC <- 1 + (ci_95_rows$AVERAGE_CLUSTER_SIZE - 1) * 0.046
# ESS for ai based on 0.046 ICC
ci_95_rows$AI_ESS_0.046_ICC <- ci_95_rows$AI_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.046_ICC
# ESS for FORM based on 0.046 ICC
ci_95_rows$FORM_ESS_0.046_ICC <- ci_95_rows$FORM_N_INDIVIDUAL / ci_95_rows$DESIGN_EFFECT_0.046_ICC
# FORM SE calculation using ESS (ICC = 0.442)
FORM_SE_ESS_0.442 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_ESS_0.442 [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_ESS_0.442_ICC [i] -1)
}
ci_95_rows$FORM_SE_ESS_0.442 <- FORM_SE_ESS_0.442 [, 1]
# FORM SE calculation using ESS (ICC = 0.046)
FORM_SE_ESS_0.046 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
FORM_SE_ESS_0.046 [i] <- ci_95_rows$FORM_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$FORM_ESS_0.046_ICC [i] -1)
}
ci_95_rows$FORM_SE_ESS_0.046 <- FORM_SE_ESS_0.046 [, 1]
# AI SE calculation using ESS (ICC = 0.442)
AI_SE_ESS_0.442 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_ESS_0.442 [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_ESS_0.442_ICC [i] -1)
}
ci_95_rows$AI_SE_ESS_0.442 <- AI_SE_ESS_0.442 [, 1]
# AI SE calculation using ESS (ICC = 0.046)
AI_SE_ESS_0.046 <- matrix(0, nrow = nrow(ci_95_rows), ncol = 1)
for (i in 1:nrow(ci_95_rows)) {
AI_SE_ESS_0.046 [i] <- ci_95_rows$AI_BIGGEST_CI_ARM [i] / -qt(.025, df = ci_95_rows$AI_ESS_0.046_ICC [i] -1)
}
ci_95_rows$AI_SE_ESS_0.046 <- AI_SE_ESS_0.046 [, 1]
SE_rows$AI_BIGGEST_CI_ARM <- NA
SE_rows$AI_N_INDIVIDUAL <- SE_rows$AI_N_CONTAINER * SE_rows$AI_N_INDIVIDUALS_PER_CONTAINER
SE_rows$AI_SE_INDIVIDUAL <- SE_rows$AI_ERROR_LOWER
SE_rows$AI_SE_CONTAINER <- SE_rows$AI_ERROR_LOWER
SE_rows$AVERAGE_CLUSTER_SIZE <- NA
SE_rows$FORM_BIGGEST_CI_ARM <- NA
SE_rows$FORM_N_INDIVIDUAL <- SE_rows$FORM_N_CONTAINER * SE_rows$FORM_N_INDIVIDUALS_PER_CONTAINER
SE_rows$FORM_SE_INDIVIDUAL <- SE_rows$FORM_ERROR_LOWER
SE_rows$FORM_SE_CONTAINER <- SE_rows$FORM_ERROR_LOWER
SE_rows$DESIGN_EFFECT_0.442_ICC <- NA
SE_rows$AI_ESS_0.442_ICC <- NA
SE_rows$FORM_ESS_0.442_ICC <- NA
SE_rows$DESIGN_EFFECT_0.046_ICC <- NA
SE_rows$AI_ESS_0.046_ICC <- NA
SE_rows$FORM_ESS_0.046_ICC <- NA
SE_rows$FORM_SE_ESS_0.442 <- SE_rows$FORM_ERROR_LOWER
SE_rows$FORM_SE_ESS_0.046 <- SE_rows$FORM_ERROR_LOWER
SE_rows$AI_SE_ESS_0.442 <- SE_rows$AI_ERROR_LOWER
SE_rows$AI_SE_ESS_0.046 <- SE_rows$AI_ERROR_LOWER
# combine
CI_SE_combined <- rbind(ci_95_rows, SE_rows)
mixed_error_row <- different_error_type [1, ]
# AI expressed as SE
mixed_error_row$AI_BIGGEST_CI_ARM <- NA
mixed_error_row$AI_N_INDIVIDUAL <- mixed_error_row$AI_N_CONTAINER * mixed_error_row$AI_N_INDIVIDUALS_PER_CONTAINER
mixed_error_row$AI_SE_INDIVIDUAL <- mixed_error_row$AI_ERROR_LOWER
mixed_error_row$AI_SE_CONTAINER <- mixed_error_row$AI_ERROR_LOWER
# FORM expressed as CI. Lower error larger of the two so just manually insert.
mixed_error_row$FORM_BIGGEST_CI_ARM <- NA
mixed_error_row$FORM_N_INDIVIDUAL <- mixed_error_row$FORM_N_CONTAINER * mixed_error_row$FORM_N_INDIVIDUALS_PER_CONTAINER
mixed_error_row$FORM_SE_INDIVIDUAL <- mixed_error_row$FORM_ERROR_LOWER / -qt(.025, df = mixed_error_row$FORM_N_INDIVIDUAL -1)
mixed_error_row$FORM_SE_CONTAINER <- mixed_error_row$FORM_ERROR_LOWER / -qt(.025, df = mixed_error_row$FORM_N_CONTAINER -1)
# average cluster size
mixed_error_row$AVERAGE_CLUSTER_SIZE <- (mixed_error_row$FORM_N_CONTAINER * mixed_error_row$FORM_N_INDIVIDUALS_PER_CONTAINER) / (mixed_error_row$FORM_N_CONTAINER)
# design effect for 0.442 ICC
mixed_error_row$DESIGN_EFFECT_0.442_ICC <- 1 + (mixed_error_row$AVERAGE_CLUSTER_SIZE - 1) * 0.442
# ESS for ai based on 0.442 ICC
mixed_error_row$AI_ESS_0.442_ICC <- NA
# ESS for form based on 0.442 ICC
mixed_error_row$FORM_ESS_0.442_ICC <- mixed_error_row$FORM_N_INDIVIDUAL / mixed_error_row$DESIGN_EFFECT_0.442_ICC
# design effect for 0.046 ICC
mixed_error_row$DESIGN_EFFECT_0.046_ICC <- 1 + (mixed_error_row$AVERAGE_CLUSTER_SIZE - 1) * 0.046
# ESS for ai based on 0.046 ICC
mixed_error_row$AI_ESS_0.046_ICC <- NA
# ESS for FORM based on 0.046 ICC
mixed_error_row$FORM_ESS_0.046_ICC <- mixed_error_row$FORM_N_INDIVIDUAL / mixed_error_row$DESIGN_EFFECT_0.046_ICC
# FORM SE calculation using ESS (ICC = 0.442)
FORM_SE_ESS_0.442 <- matrix(0, nrow = nrow(mixed_error_row), ncol = 1)
for (i in 1:nrow(mixed_error_row)) {
FORM_SE_ESS_0.442 [i] <- mixed_error_row$FORM_ERROR_LOWER [i] / -qt(.025, df = mixed_error_row$FORM_ESS_0.442_ICC [i] -1)
}
mixed_error_row$FORM_SE_ESS_0.442 <- FORM_SE_ESS_0.442 [, 1]
# FORM SE calculation using ESS (ICC = 0.046)
FORM_SE_ESS_0.046 <- matrix(0, nrow = nrow(mixed_error_row), ncol = 1)
for (i in 1:nrow(mixed_error_row)) {
FORM_SE_ESS_0.046 [i] <- mixed_error_row$FORM_ERROR_LOWER [i] / -qt(.025, df = mixed_error_row$FORM_ESS_0.046_ICC [i] -1)
}
mixed_error_row$FORM_SE_ESS_0.046 <- FORM_SE_ESS_0.046 [, 1]
# AI SE calculation using ESS (ICC = 0.442)
mixed_error_row$AI_SE_ESS_0.442 <- mixed_error_row$AI_ERROR_LOWER
# AI SE calculation using ESS (ICC = 0.046)
mixed_error_row$AI_SE_ESS_0.046 <- mixed_error_row$AI_ERROR_LOWER
# combine
CI_SE_combined <- rbind(CI_SE_combined, mixed_error_row)
# cbind(CI_SE_combined$AI_SE_CONTAINER, CI_SE_combined$AI_SE_ESS_0.442, CI_SE_combined$AI_SE_ESS_0.046, CI_SE_combined$AI_SE_INDIVIDUAL)
# above shows that as sample size gets bigger, the extracted SE gets bigger
# calculate LRR
CI_SE_combined$LRR <- log(CI_SE_combined$FORM_50/CI_SE_combined$AI_50)
# calculate LRR variance using var(lnRR) = SE_FORM^2/mean_FORM^2 + SE_AI^2/mean_AI^2
# individual SE variance
CI_SE_combined$LRR_VAR_INDIVIDUAL <- (CI_SE_combined$FORM_SE_INDIVIDUAL^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_INDIVIDUAL^2 / CI_SE_combined$AI_50^2)
# container SE variance
CI_SE_combined$LRR_VAR_CONTAINER <- (CI_SE_combined$FORM_SE_CONTAINER^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_CONTAINER^2 / CI_SE_combined$AI_50^2)
# ICC 0.442 SE variance
CI_SE_combined$LRR_VAR_CONTAINER_0.442 <- (CI_SE_combined$FORM_SE_ESS_0.442^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_ESS_0.442^2 / CI_SE_combined$AI_50^2)
# ICC 0.046 SE variance
CI_SE_combined$LRR_VAR_CONTAINER_0.046 <- (CI_SE_combined$FORM_SE_ESS_0.046^2 / CI_SE_combined$FORM_50^2) + (CI_SE_combined$AI_SE_ESS_0.046^2 / CI_SE_combined$AI_50^2)
# variance from big to small
cbind(CI_SE_combined$LRR_VAR_INDIVIDUAL, CI_SE_combined$LRR_VAR_CONTAINER_0.046, CI_SE_combined$LRR_VAR_CONTAINER_0.442, CI_SE_combined$LRR_VAR_CONTAINER)
# this effect size has a very small variance because it has a sample size of 2. This made the t-dis value very large, making the SE small
# in turn making the variance small.
CI_SE_combined [87, ]
# here the quoted CI was massive, so the SE is as well.
CI_SE_combined [221, ]
# sample size was 2
CI_SE_combined [(CI_SE_combined$AI_N_INDIVIDUAL == 2) & (CI_SE_combined$FORM_N_INDIVIDUAL == 2), ]
CI_SE_combined_clean <- CI_SE_combined [ , c(1,2,3,5,8,12,14,17,22,23,24,26,27,28,29,30,31,32,33,35:45,48,49,4,51,52,68,67,53,13,55,56,66,65,57,69:73)]
CI_SE_combined_clean <- CI_SE_combined_clean [, c(1,2,10,18,9,3:8,11:17,19:46,49,48,47)]
CI_SE_combined <- CI_SE_combined [CI_SE_combined$LRR_VAR_INDIVIDUAL < 10, ]
# remove 6 effect sizes with LRR_VAR_INDIVIDUAL > 10
CI_SE_combined <- CI_SE_combined [CI_SE_combined$LRR_VAR_INDIVIDUAL < 10, ]
# ai and form with SE
se_imputation_df_ai <- cbind.data.frame(DATA_ID = CI_SE_combined$DATA_ID, ED_50 = CI_SE_combined$AI_50, SE = CI_SE_combined$AI_SE_INDIVIDUAL, FORM_AI = "AI")
se_imputation_df_form <- cbind.data.frame(DATA_ID = CI_SE_combined$DATA_ID, ED_50 = CI_SE_combined$FORM_50, SE = CI_SE_combined$FORM_SE_INDIVIDUAL, FORM_AI = "FORM")
# combine
se_imputation_df <- rbind.data.frame(se_imputation_df_ai, se_imputation_df_form)
se_imputation_df$FORM_AI <- as.factor(se_imputation_df$FORM_AI)
plot(se_imputation_df$SE ~ se_imputation_df$ED_50)
plot(se_imputation_df$SE [se_imputation_df$SE < 2000] ~ se_imputation_df$ED_50 [se_imputation_df$ED_50 < 2000])
plot(se_imputation_df$SE [se_imputation_df$ED_50 < 2000] ~ se_imputation_df$ED_50 [se_imputation_df$ED_50 < 2000])
plot(se_imputation_df$SE [(se_imputation_df$ED_50 < 400) & (se_imputation_df$SE < 100)] ~ se_imputation_df$ED_50 [(se_imputation_df$ED_50 < 400) & (se_imputation_df$SE < 100)])
se_imputation_df$SE_PROP_ED_50 <- se_imputation_df$SE / se_imputation_df$ED_50
plot(density(se_imputation_df$SE_PROP_ED_50))
View(se_imputation_df)
plot(se_imputation_df$SE_PROP_ED_50 ~ se_imputation_df$ED_50)
plot(se_imputation_df$SE_PROP_ED_50 [se_imputation_df$SE_PROP_ED_50 < 1] ~ se_imputation_df$ED_50 [se_imputation_df$ED_50 < 1000])
plot(se_imputation_df$SE_PROP_ED_50 [se_imputation_df$ED_50 < 1000] ~ se_imputation_df$ED_50 [se_imputation_df$ED_50 < 1000])
plot(se_imputation_df$SE_PROP_ED_50 [se_imputation_df$ED_50 < 400] ~ se_imputation_df$ED_50 [se_imputation_df$ED_50 < 400])
plot(se_imputation_df$SE [(se_imputation_df$ED_50 < 400) & (se_imputation_df$SE < 100)] ~ se_imputation_df$ED_50 [(se_imputation_df$ED_50 < 400) & (se_imputation_df$SE < 100)])
# se as a proportion of mean distribution
plot(density(se_imputation_df$SE_PROP_ED_50))
View(missing_se)
library(fitdistrplus)
# < 1
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50,
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
plot(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50 [se_imputation_df$SE_PROP_ED_50 < 1],
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
plot(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50,
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
plot(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50,
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
plot(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma_imputation <- rgamma(n = 05, shape = fit_1$estimate [[1]], rate = fit_1$estimate [[2]])
summary(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50 [se_imputation_df$SE_PROP_ED_50 < 1],
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
# for < 1 add [se_imputation_df$SE_PROP_ED_50 < 1]
SE_PROP_ED_50_gamma <- fitdist(se_imputation_df$SE_PROP_ED_50,
distr = "gamma",
method = "mle")
summary(SE_PROP_ED_50_gamma)
plot(SE_PROP_ED_50_gamma)
SE_PROP_ED_50_gamma_imputation <- rgamma(n = 105, shape = SE_PROP_ED_50_gamma$estimate [[1]], rate = SE_PROP_ED_50_gamma$estimate [[2]])
SE_PROP_ED_50_gamma_imputation
min(SE_PROP_ED_50_gamma_imputation)
max(SE_PROP_ED_50_gamma_imputation)
missing_se$AI_ERROR_TYPE == "n/a"
missing_se [missing_se$AI_ERROR_TYPE == "n/a"]
missing_se [missing_se$AI_ERROR_TYPE == "n/a", ]
rbind.data.frame(missing_se [missing_se$AI_ERROR_TYPE == "n/a", ], missing_se [missing_se$FORM_ERROR_TYPE == "n/a", ])
missing_se [missing_se$FORM_ERROR_TYPE == "n/a", ]
nrow(rbind.data.frame(missing_se [missing_se$AI_ERROR_TYPE == "n/a", ], missing_se [missing_se$FORM_ERROR_TYPE == "n/a", ]))
nrow(rbind.data.frame(missing_se [missing_se$AI_ERROR_TYPE == "n/a", ], missing_se [missing_se$FORM_ERROR_TYPE == "n/a", ]))
SE_PROP_ED_50_gamma_imputation <- rgamma(n = 118, shape = SE_PROP_ED_50_gamma$estimate [[1]], rate = SE_PROP_ED_50_gamma$estimate [[2]])
min(SE_PROP_ED_50_gamma_imputation)
max(SE_PROP_ED_50_gamma_imputation)
write.csv(missing_se, "missing_se.csv", row.names = FALSE)
